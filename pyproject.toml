# SPDX-License-Identifier: MIT

# Yoinked from disnake-ext-formatter

[tool.poetry]
name = "disnake-ext-plugins"
version = "0.1.0a1"
description = "Bye bye cogs and extensionss, say hello to plugins!"
authors = ["ItsAleph <igorekkrupskij@gmail.com>"]
license = "MIT"
packages = [
    { include = "disnake/ext/plugins/**/*.py" },
]
readme = "README.rst"
repository = "https://github.com/ItsAleph/disnake-ext-plugins"
documentation = "https://github.com/ItsAleph/disnake-ext-plugins#readme"
keywords = [
    "disnake",
    "disnake.ext",
    "discord",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ItsAleph/disnake-ext-plugins/issues"

[tool.poetry.dependencies]
python = "^3.8"
disnake = "^2.5"

[tool.poetry.dev-dependencies]
pre-commit = "^2.18.1"
pytest = "~7.1.2"
pytest-asyncio = "~0.18.3"
taskipy = "^1.10.1"
flake8 = "~=4.0.1"
flake8-bandit = "~=3.0.0"
flake8-bugbear = "22.7.1"
flake8-comprehensions = "~=3.10.0"
flake8-noqa = "~=1.2.5"
flake8-pytest-style = "~=1.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
filterwarnings = ["error"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.taskipy.tasks]
black = { cmd = "task lint black", help = "Run black" }
isort = { cmd = "task lint isort", help = "Run isort" }
lint = { cmd = "pre-commit run --all-files", help = "Check all files for linting errors" }
precommit = { cmd = "pre-commit install --install-hooks", help = "Install the pre-commit hook" }
pyright = { cmd = "set PYRIGHT_PYTHON_IGNORE_WARNINGS=1 && pyright", help = "Run pyright" }
test = { cmd = "pytest", help = "Run pytest" }
